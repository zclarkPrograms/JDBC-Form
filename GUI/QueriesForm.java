/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.project3;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;


public class QueriesForm extends javax.swing.JFrame {
    private final Connection conn;
    
    /**
     * Creates new form QueriesForm
     * @param conn
     */
    public QueriesForm(Connection conn) {
        this.conn=conn;
        initComponents();
        jTable1.setVisible(true);
        
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                try {
                    conn.close();
                    System.out.println("Closed Connection");
                } catch (SQLException ex) {
                    Logger.getLogger(ConnectionInfoForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Query Text:");

        jButton1.setText("Execute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(405, 405, 405)
                .addComponent(jButton1)
                .addGap(0, 450, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jTextField1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    //gets table full of the data from data_arr and columnNames
    //ensures that the cells in the table are not editable
    private DefaultTableModel getTableModel(Object[][] data_arr, Object columnNames[]){
        return new DefaultTableModel(data_arr, columnNames){
          @Override
          public boolean isCellEditable(int row, int column){
              return false;
          }
        };
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String sqlStr=jTextField1.getText();
        ResultSet rs=null;
        
        try{
            Statement stmt=conn.createStatement();
            rs=stmt.executeQuery(sqlStr);
        }
        catch(SQLException ex){
            //displays exception message
            JOptionPane.showMessageDialog(null, ex.getMessage());
            //ex.printStackTrace();
        }
        
        
        
        if(rs!=null){
            try{
                ResultSetMetaData metadata=rs.getMetaData();
                int cols=metadata.getColumnCount();
                
                //when something other than a select statement is used,
                //resultset won't function properly in this location
                //since these commands don't display anything, let user know these commands succeeded
                if(cols==0){
                    JOptionPane.showMessageDialog(null, "Table was updated successfully.");
                    return;
                }
                
                String[] columnNames=new String[cols];
                
                ArrayList<Object[]> data=new ArrayList<>();
                
                for(int i=1;i<=cols;i++){
                    columnNames[i-1]=metadata.getColumnName(i);
                }
                
                int rows=0;
                //retreives data from each row and keeps track of number of rows
                while(rs.next()){
                    rows++;
                    data.add(new Object[cols]);
                    
                    for(int i=1;i<=cols;i++){
                        data.get(rs.getRow()-1)[i-1]=rs.getObject(i);
                    }
                }

                Object[][] data_arr=new Object[rows][cols];
                
                //converts ArrayList<Object[]> to Object[][] since that is what the tablemodel requires.
                for(int i=0;i<data.size();i++){
                    data_arr[i]=data.get(i);
                }
                
                //displays the table requested by the user
                jTable1.setModel(getTableModel(data_arr, columnNames)); 
            }
            catch(SQLException ex){
                ex.printStackTrace();
            }
            
            //alter table test1 modify num varchar(100)
        }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueriesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueriesForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
